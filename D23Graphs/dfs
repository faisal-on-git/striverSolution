//link=https://practice.geeksforgeeks.org/problems/depth-first-traversal-for-a-graph/1#


//see strivers vdo incase of doubt


class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    
    ArrayList<Integer> ans=new ArrayList<>();
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        
        
        // Code here
          boolean [] visited=new boolean[V];
        Arrays.fill(visited,false);
        for(int i=0;i<V;i++){
            if(visited[i]==false){
                dfs(adj,visited,i);
            }
        }
      
       
        return ans;
        
        
    }
    
    public void dfs(ArrayList<ArrayList<Integer>> adj,boolean[] visited,int node){
        
        visited[node]=true;
        ans.add(node);
        for(Integer v:adj.get(node)){
            if(visited[v]==false){
                dfs(adj,visited,v);
            }
        }
       
        }
    
}
