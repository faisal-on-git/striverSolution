
class Solution {
    // Function to detect cycle in a directed graph.
    public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) {
        // code here
        boolean [] vis=new boolean [V];
          boolean [] pathVis=new boolean [V];
        for(int i=0;i<V;i++){
            if(!vis[i]){
                if(dfs(adj,i,vis,pathVis)){
                    return true;
                }
            }
        }
        return false;
        
    }
    
    
    boolean dfs(ArrayList<ArrayList<Integer>> adj,int v,boolean[] vis,boolean[] pathVis){
      
        
        
        vis[v]=true;
        pathVis[v]=true;
        for(int nbr:adj.get(v)){
            if(!vis[nbr]){
            if(dfs(adj,nbr,vis,pathVis)){
                return true;
            }
        }
        else if(pathVis[nbr]){
            return true;
        }
        }
         pathVis[v]=false;
         return false;
    }
    
}
